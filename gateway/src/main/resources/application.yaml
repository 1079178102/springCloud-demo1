# 使用案例二
zuul:
  # 忽略服务,忽略后不能使用默认的规则了
  ignored-services:
    - consumer-service
  # 配置规则
  routes:
    # ************zuul规则配置案例三************ <-S
      # 保留前缀
      # 原user-service/user/1可以简化为/user/1
#    user-service:
#      path: /user/**
#      serviceId: user-service
#      # 关闭当前服务去除前缀,strip-prefix也可以放到routes下会成为全局去除前缀，配合prefix(全局前缀匹配)使用
#      strip-prefix: false
    # ************zuul规则配置案例三************ <-E

    # ************zuul规则配置案例二************ <-S
      # 1.简化案例一
      # 2.zuul默认会给每一个服务，创建默认的规则，以服务名称为路径，若有些服务不想暴露则可以使用ignored-services忽略该服务
      # 3.若配置了新的规则，则user-service和user同时能使用
    user-service: /user/**
    # ************zuul规则配置案例二************ <-E

    # ************zuul规则配置案例一************ <-S
#    xph: #路由id,随便写，不影响
#      path: /user-service/**
#      serviceId: user-service
    # ************zuul规则配置案例一************ <-E


############################################分割线##############################################

server:
  port: 10010

spring:
  application:
    name: gateway

eureka:
  client:
    service-url:
      defaultZone: http://127.0.0.1:10086/eureka

# Zuul的负载均衡和熔断 <-S
# ribbon的超时时长，真实值是(read + connect) * 2 , 必须小于hystrix时长
# 计算公式：ribbonTimeout = （ribbonReadTimeout + ribbonConnectTimeout) * ( maxAutoRetries + 1) * ( maxAutoRetriesNextServer + 1)
ribbon:
  ReadTimeout: 2500
  SocketTimeout: 500

hystrix:
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 7000

# Zuul的负载均衡和熔断 <-E